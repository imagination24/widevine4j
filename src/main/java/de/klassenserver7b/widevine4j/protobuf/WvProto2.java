// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wv_proto2.proto

package de.klassenserver7b.widevine4j.protobuf;

public final class WvProto2 {
  private WvProto2() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LicenseIdentification_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LicenseIdentification_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_License_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_License_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_License_Policy_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_License_Policy_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_License_KeyContainer_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_License_KeyContainer_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_License_KeyContainer_KeyControl_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_License_KeyContainer_KeyControl_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_License_KeyContainer_OutputProtection_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_License_KeyContainer_OutputProtection_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_License_KeyContainer_VideoResolutionConstraint_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_License_KeyContainer_VideoResolutionConstraint_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_License_KeyContainer_OperatorSessionKeyPermissions_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_License_KeyContainer_OperatorSessionKeyPermissions_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LicenseRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LicenseRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LicenseRequest_ContentIdentification_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LicenseRequest_ContentIdentification_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LicenseRequest_ContentIdentification_WidevinePsshData_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LicenseRequest_ContentIdentification_WidevinePsshData_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LicenseRequest_ContentIdentification_WebmKeyId_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LicenseRequest_ContentIdentification_WebmKeyId_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LicenseRequest_ContentIdentification_ExistingLicense_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LicenseRequest_ContentIdentification_ExistingLicense_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LicenseRequest_ContentIdentification_InitData_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LicenseRequest_ContentIdentification_InitData_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MetricData_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MetricData_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MetricData_TypeValue_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MetricData_TypeValue_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_VersionInfo_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_VersionInfo_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SignedMessage_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SignedMessage_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ClientIdentification_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ClientIdentification_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ClientIdentification_NameValue_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ClientIdentification_NameValue_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ClientIdentification_ClientCapabilities_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ClientIdentification_ClientCapabilities_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ClientIdentification_ClientCredentials_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ClientIdentification_ClientCredentials_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EncryptedClientIdentification_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EncryptedClientIdentification_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DrmCertificate_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DrmCertificate_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DrmCertificate_EncryptionKey_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DrmCertificate_EncryptionKey_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SignedDrmCertificate_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SignedDrmCertificate_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_WidevinePsshData_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_WidevinePsshData_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_WidevinePsshData_EntitledKey_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_WidevinePsshData_EntitledKey_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FileHashes_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FileHashes_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FileHashes_Signature_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FileHashes_Signature_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017wv_proto2.proto\"\241\001\n\025LicenseIdentificat" +
      "ion\022\022\n\nrequest_id\030\001 \001(\014\022\022\n\nsession_id\030\002 " +
      "\001(\014\022\023\n\013purchase_id\030\003 \001(\014\022\032\n\004type\030\004 \001(\0162\014" +
      ".LicenseType\022\017\n\007version\030\005 \001(\005\022\036\n\026provide" +
      "r_session_token\030\006 \001(\014\"\315\025\n\007License\022\"\n\002id\030" +
      "\001 \001(\0132\026.LicenseIdentification\022\037\n\006policy\030" +
      "\002 \001(\0132\017.License.Policy\022\"\n\003key\030\003 \003(\0132\025.Li" +
      "cense.KeyContainer\022\032\n\022license_start_time" +
      "\030\004 \001(\003\022*\n\033remote_attestation_verified\030\005 " +
      "\001(\010:\005false\022\035\n\025provider_client_token\030\006 \001(" +
      "\014\022\031\n\021protection_scheme\030\007 \001(\r\022\027\n\017srm_requ" +
      "irement\030\010 \001(\014\022\022\n\nsrm_update\030\t \001(\014\022[\n\034pla" +
      "tform_verification_status\030\n \001(\0162\033.Platfo" +
      "rmVerificationStatus:\030PLATFORM_NO_VERIFI" +
      "CATION\022\021\n\tgroup_ids\030\013 \003(\014\032\256\004\n\006Policy\022\027\n\010" +
      "can_play\030\001 \001(\010:\005false\022\032\n\013can_persist\030\002 \001" +
      "(\010:\005false\022\030\n\tcan_renew\030\003 \001(\010:\005false\022\"\n\027r" +
      "ental_duration_seconds\030\004 \001(\003:\0010\022$\n\031playb" +
      "ack_duration_seconds\030\005 \001(\003:\0010\022#\n\030license" +
      "_duration_seconds\030\006 \001(\003:\0010\022,\n!renewal_re" +
      "covery_duration_seconds\030\007 \001(\003:\0010\022\032\n\022rene" +
      "wal_server_url\030\010 \001(\t\022 \n\025renewal_delay_se" +
      "conds\030\t \001(\003:\0010\022)\n\036renewal_retry_interval" +
      "_seconds\030\n \001(\003:\0010\022\037\n\020renew_with_usage\030\013 " +
      "\001(\010:\005false\022\'\n\030always_include_client_id\030\014" +
      " \001(\010:\005false\022*\n\037play_start_grace_period_s" +
      "econds\030\r \001(\003:\0010\022-\n\036soft_enforce_playback" +
      "_duration\030\016 \001(\010:\005false\022*\n\034soft_enforce_r" +
      "ental_duration\030\017 \001(\010:\004true\032\210\016\n\014KeyContai" +
      "ner\022\n\n\002id\030\001 \001(\014\022\n\n\002iv\030\002 \001(\014\022\013\n\003key\030\003 \001(\014" +
      "\022+\n\004type\030\004 \001(\0162\035.License.KeyContainer.Ke" +
      "yType\022D\n\005level\030\005 \001(\0162#.License.KeyContai" +
      "ner.SecurityLevel:\020SW_SECURE_CRYPTO\022C\n\023r" +
      "equired_protection\030\006 \001(\0132&.License.KeyCo" +
      "ntainer.OutputProtection\022D\n\024requested_pr" +
      "otection\030\007 \001(\0132&.License.KeyContainer.Ou" +
      "tputProtection\0225\n\013key_control\030\010 \001(\0132 .Li" +
      "cense.KeyContainer.KeyControl\022]\n operato" +
      "r_session_key_permissions\030\t \001(\01323.Licens" +
      "e.KeyContainer.OperatorSessionKeyPermiss" +
      "ions\022U\n\034video_resolution_constraints\030\n \003" +
      "(\0132/.License.KeyContainer.VideoResolutio" +
      "nConstraint\022(\n\031anti_rollback_usage_table" +
      "\030\013 \001(\010:\005false\022\023\n\013track_label\030\014 \001(\t\0323\n\nKe" +
      "yControl\022\031\n\021key_control_block\030\001 \001(\014\022\n\n\002i" +
      "v\030\002 \001(\014\032\310\004\n\020OutputProtection\022D\n\004hdcp\030\001 \001" +
      "(\0162+.License.KeyContainer.OutputProtecti" +
      "on.HDCP:\tHDCP_NONE\022J\n\ncgms_flags\030\002 \001(\0162+" +
      ".License.KeyContainer.OutputProtection.C" +
      "GMS:\tCGMS_NONE\022]\n\rhdcp_srm_rule\030\003 \001(\01622." +
      "License.KeyContainer.OutputProtection.Hd" +
      "cpSrmRule:\022HDCP_SRM_RULE_NONE\022$\n\025disable" +
      "_analog_output\030\004 \001(\010:\005false\022%\n\026disable_d" +
      "igital_output\030\005 \001(\010:\005false\"y\n\004HDCP\022\r\n\tHD" +
      "CP_NONE\020\000\022\013\n\007HDCP_V1\020\001\022\013\n\007HDCP_V2\020\002\022\r\n\tH" +
      "DCP_V2_1\020\003\022\r\n\tHDCP_V2_2\020\004\022\r\n\tHDCP_V2_3\020\005" +
      "\022\033\n\026HDCP_NO_DIGITAL_OUTPUT\020\377\001\"C\n\004CGMS\022\r\n" +
      "\tCGMS_NONE\020*\022\r\n\tCOPY_FREE\020\000\022\r\n\tCOPY_ONCE" +
      "\020\002\022\016\n\nCOPY_NEVER\020\003\"6\n\013HdcpSrmRule\022\026\n\022HDC" +
      "P_SRM_RULE_NONE\020\000\022\017\n\013CURRENT_SRM\020\001\032\236\001\n\031V" +
      "ideoResolutionConstraint\022\035\n\025min_resoluti" +
      "on_pixels\030\001 \001(\r\022\035\n\025max_resolution_pixels" +
      "\030\002 \001(\r\022C\n\023required_protection\030\003 \001(\0132&.Li" +
      "cense.KeyContainer.OutputProtection\032\235\001\n\035" +
      "OperatorSessionKeyPermissions\022\034\n\rallow_e" +
      "ncrypt\030\001 \001(\010:\005false\022\034\n\rallow_decrypt\030\002 \001" +
      "(\010:\005false\022\031\n\nallow_sign\030\003 \001(\010:\005false\022%\n\026" +
      "allow_signature_verify\030\004 \001(\010:\005false\"l\n\007K" +
      "eyType\022\013\n\007SIGNING\020\001\022\013\n\007CONTENT\020\002\022\017\n\013KEY_" +
      "CONTROL\020\003\022\024\n\020OPERATOR_SESSION\020\004\022\017\n\013ENTIT" +
      "LEMENT\020\005\022\017\n\013OEM_CONTENT\020\006\"z\n\rSecurityLev" +
      "el\022\024\n\020SW_SECURE_CRYPTO\020\001\022\024\n\020SW_SECURE_DE" +
      "CODE\020\002\022\024\n\020HW_SECURE_CRYPTO\020\003\022\024\n\020HW_SECUR" +
      "E_DECODE\020\004\022\021\n\rHW_SECURE_ALL\020\005\"\265\n\n\016Licens" +
      "eRequest\022(\n\tclient_id\030\001 \001(\0132\025.ClientIden" +
      "tification\0229\n\ncontent_id\030\002 \001(\0132%.License" +
      "Request.ContentIdentification\022)\n\004type\030\003 " +
      "\001(\0162\033.LicenseRequest.RequestType\022\024\n\014requ" +
      "est_time\030\004 \001(\003\022$\n\034key_control_nonce_depr" +
      "ecated\030\005 \001(\014\0227\n\020protocol_version\030\006 \001(\0162\020" +
      ".ProtocolVersion:\013VERSION_2_0\022\031\n\021key_con" +
      "trol_nonce\030\007 \001(\r\022;\n\023encrypted_client_id\030" +
      "\010 \001(\0132\036.EncryptedClientIdentification\032\223\007" +
      "\n\025ContentIdentification\022T\n\022widevine_pssh" +
      "_data\030\001 \001(\01326.LicenseRequest.ContentIden" +
      "tification.WidevinePsshDataH\000\022F\n\013webm_ke" +
      "y_id\030\002 \001(\0132/.LicenseRequest.ContentIdent" +
      "ification.WebmKeyIdH\000\022Q\n\020existing_licens" +
      "e\030\003 \001(\01325.LicenseRequest.ContentIdentifi" +
      "cation.ExistingLicenseH\000\022C\n\tinit_data\030\004 " +
      "\001(\0132..LicenseRequest.ContentIdentificati" +
      "on.InitDataH\000\032]\n\020WidevinePsshData\022\021\n\tpss" +
      "h_data\030\001 \003(\014\022\"\n\014license_type\030\002 \001(\0162\014.Lic" +
      "enseType\022\022\n\nrequest_id\030\003 \001(\014\032S\n\tWebmKeyI" +
      "d\022\016\n\006header\030\001 \001(\014\022\"\n\014license_type\030\002 \001(\0162" +
      "\014.LicenseType\022\022\n\nrequest_id\030\003 \001(\014\032\242\001\n\017Ex" +
      "istingLicense\022*\n\nlicense_id\030\001 \001(\0132\026.Lice" +
      "nseIdentification\022\035\n\025seconds_since_start" +
      "ed\030\002 \001(\003\022!\n\031seconds_since_last_played\030\003 " +
      "\001(\003\022!\n\031session_usage_table_entry\030\004 \001(\014\032\324" +
      "\001\n\010InitData\022Y\n\016init_data_type\030\001 \001(\0162;.Li" +
      "censeRequest.ContentIdentification.InitD" +
      "ata.InitDataType:\004CENC\022\021\n\tinit_data\030\002 \001(" +
      "\014\022\"\n\014license_type\030\003 \001(\0162\014.LicenseType\022\022\n" +
      "\nrequest_id\030\004 \001(\014\"\"\n\014InitDataType\022\010\n\004CEN" +
      "C\020\001\022\010\n\004WEBM\020\002B\024\n\022content_id_variant\"0\n\013R" +
      "equestType\022\007\n\003NEW\020\001\022\013\n\007RENEWAL\020\002\022\013\n\007RELE" +
      "ASE\020\003\"\273\001\n\nMetricData\022\022\n\nstage_name\030\001 \001(\t" +
      "\022*\n\013metric_data\030\002 \003(\0132\025.MetricData.TypeV" +
      "alue\032C\n\tTypeValue\022$\n\004type\030\001 \001(\0162\026.Metric" +
      "Data.MetricType\022\020\n\005value\030\002 \001(\003:\0010\"(\n\nMet" +
      "ricType\022\013\n\007LATENCY\020\001\022\r\n\tTIMESTAMP\020\002\"K\n\013V" +
      "ersionInfo\022\033\n\023license_sdk_version\030\001 \001(\t\022" +
      "\037\n\027license_service_version\030\002 \001(\t\"\206\005\n\rSig" +
      "nedMessage\022(\n\004type\030\001 \001(\0162\032.SignedMessage" +
      ".MessageType\022\013\n\003msg\030\002 \001(\014\022\021\n\tsignature\030\003" +
      " \001(\014\022\023\n\013session_key\030\004 \001(\014\022\032\n\022remote_atte" +
      "station\030\005 \001(\014\022 \n\013metric_data\030\006 \003(\0132\013.Met" +
      "ricData\022*\n\024service_version_info\030\007 \001(\0132\014." +
      "VersionInfo\022H\n\020session_key_type\030\010 \001(\0162\035." +
      "SignedMessage.SessionKeyType:\017WRAPPED_AE" +
      "S_KEY\022\036\n\026oemcrypto_core_message\030\t \001(\014\"\354\001" +
      "\n\013MessageType\022\023\n\017LICENSE_REQUEST\020\001\022\013\n\007LI" +
      "CENSE\020\002\022\022\n\016ERROR_RESPONSE\020\003\022\037\n\033SERVICE_C" +
      "ERTIFICATE_REQUEST\020\004\022\027\n\023SERVICE_CERTIFIC" +
      "ATE\020\005\022\017\n\013SUB_LICENSE\020\006\022\027\n\023CAS_LICENSE_RE" +
      "QUEST\020\007\022\017\n\013CAS_LICENSE\020\010\022\034\n\030EXTERNAL_LIC" +
      "ENSE_REQUEST\020\t\022\024\n\020EXTERNAL_LICENSE\020\n\"S\n\016" +
      "SessionKeyType\022\r\n\tUNDEFINED\020\000\022\023\n\017WRAPPED" +
      "_AES_KEY\020\001\022\035\n\031EPHERMERAL_ECC_PUBLIC_KEY\020" +
      "\002\"\346\014\n\024ClientIdentification\0225\n\004type\030\001 \001(\016" +
      "2\037.ClientIdentification.TokenType:\006KEYBO" +
      "X\022\r\n\005token\030\002 \001(\014\0224\n\013client_info\030\003 \003(\0132\037." +
      "ClientIdentification.NameValue\022\035\n\025provid" +
      "er_client_token\030\004 \001(\014\022\027\n\017license_counter" +
      "\030\005 \001(\r\022E\n\023client_capabilities\030\006 \001(\0132(.Cl" +
      "ientIdentification.ClientCapabilities\022\020\n" +
      "\010vmp_data\030\007 \001(\014\022C\n\022device_credentials\030\010 " +
      "\003(\0132\'.ClientIdentification.ClientCredent" +
      "ials\032(\n\tNameValue\022\014\n\004name\030\001 \001(\t\022\r\n\005value" +
      "\030\002 \001(\t\032\201\010\n\022ClientCapabilities\022\033\n\014client_" +
      "token\030\001 \001(\010:\005false\022\034\n\rsession_token\030\002 \001(" +
      "\010:\005false\022+\n\034video_resolution_constraints" +
      "\030\003 \001(\010:\005false\022Y\n\020max_hdcp_version\030\004 \001(\0162" +
      "4.ClientIdentification.ClientCapabilitie" +
      "s.HdcpVersion:\tHDCP_NONE\022\036\n\026oem_crypto_a" +
      "pi_version\030\005 \001(\r\022(\n\031anti_rollback_usage_" +
      "table\030\006 \001(\010:\005false\022\023\n\013srm_version\030\007 \001(\r\022" +
      "\035\n\016can_update_srm\030\010 \001(\010:\005false\022c\n\036suppor" +
      "ted_certificate_key_type\030\t \003(\0162;.ClientI" +
      "dentification.ClientCapabilities.Certifi" +
      "cateKeyType\022|\n\032analog_output_capabilitie" +
      "s\030\n \001(\0162A.ClientIdentification.ClientCap" +
      "abilities.AnalogOutputCapabilities:\025ANAL" +
      "OG_OUTPUT_UNKNOWN\022(\n\031can_disable_analog_" +
      "output\030\013 \001(\010:\005false\022\037\n\024resource_rating_t" +
      "ier\030\014 \001(\r:\0010\"\200\001\n\013HdcpVersion\022\r\n\tHDCP_NON" +
      "E\020\000\022\013\n\007HDCP_V1\020\001\022\013\n\007HDCP_V2\020\002\022\r\n\tHDCP_V2" +
      "_1\020\003\022\r\n\tHDCP_V2_2\020\004\022\r\n\tHDCP_V2_3\020\005\022\033\n\026HD" +
      "CP_NO_DIGITAL_OUTPUT\020\377\001\"i\n\022CertificateKe" +
      "yType\022\014\n\010RSA_2048\020\000\022\014\n\010RSA_3072\020\001\022\021\n\rECC" +
      "_SECP256R1\020\002\022\021\n\rECC_SECP384R1\020\003\022\021\n\rECC_S" +
      "ECP521R1\020\004\"\215\001\n\030AnalogOutputCapabilities\022" +
      "\031\n\025ANALOG_OUTPUT_UNKNOWN\020\000\022\026\n\022ANALOG_OUT" +
      "PUT_NONE\020\001\022\033\n\027ANALOG_OUTPUT_SUPPORTED\020\002\022" +
      "!\n\035ANALOG_OUTPUT_SUPPORTS_CGMS_A\020\003\032Y\n\021Cl" +
      "ientCredentials\0225\n\004type\030\001 \001(\0162\037.ClientId" +
      "entification.TokenType:\006KEYBOX\022\r\n\005token\030" +
      "\002 \001(\014\"s\n\tTokenType\022\n\n\006KEYBOX\020\000\022\032\n\026DRM_DE" +
      "VICE_CERTIFICATE\020\001\022\"\n\036REMOTE_ATTESTATION" +
      "_CERTIFICATE\020\002\022\032\n\026OEM_DEVICE_CERTIFICATE" +
      "\020\003\"\273\001\n\035EncryptedClientIdentification\022\023\n\013" +
      "provider_id\030\001 \001(\t\022)\n!service_certificate" +
      "_serial_number\030\002 \001(\014\022\033\n\023encrypted_client" +
      "_id\030\003 \001(\014\022\036\n\026encrypted_client_id_iv\030\004 \001(" +
      "\014\022\035\n\025encrypted_privacy_key\030\005 \001(\014\"\256\006\n\016Drm" +
      "Certificate\022\"\n\004type\030\001 \001(\0162\024.DrmCertifica" +
      "te.Type\022\025\n\rserial_number\030\002 \001(\014\022\035\n\025creati" +
      "on_time_seconds\030\003 \001(\r\022\037\n\027expiration_time" +
      "_seconds\030\014 \001(\r\022\022\n\npublic_key\030\004 \001(\014\022\021\n\tsy" +
      "stem_id\030\005 \001(\r\022\"\n\026test_device_deprecated\030" +
      "\006 \001(\010B\002\030\001\022\023\n\013provider_id\030\007 \001(\t\0222\n\rservic" +
      "e_types\030\010 \003(\0162\033.DrmCertificate.ServiceTy" +
      "pe\0221\n\talgorithm\030\t \001(\0162\031.DrmCertificate.A" +
      "lgorithm:\003RSA\022\016\n\006rot_id\030\n \001(\014\0225\n\016encrypt" +
      "ion_key\030\013 \001(\0132\035.DrmCertificate.Encryptio" +
      "nKey\032V\n\rEncryptionKey\022\022\n\npublic_key\030\001 \001(" +
      "\014\0221\n\talgorithm\030\002 \001(\0162\031.DrmCertificate.Al" +
      "gorithm:\003RSA\"L\n\004Type\022\010\n\004ROOT\020\000\022\020\n\014DEVICE" +
      "_MODEL\020\001\022\n\n\006DEVICE\020\002\022\013\n\007SERVICE\020\003\022\017\n\013PRO" +
      "VISIONER\020\004\"\206\001\n\013ServiceType\022\030\n\024UNKNOWN_SE" +
      "RVICE_TYPE\020\000\022\026\n\022LICENSE_SERVER_SDK\020\001\022\034\n\030" +
      "LICENSE_SERVER_PROXY_SDK\020\002\022\024\n\020PROVISIONI" +
      "NG_SDK\020\003\022\021\n\rCAS_PROXY_SDK\020\004\"d\n\tAlgorithm" +
      "\022\025\n\021UNKNOWN_ALGORITHM\020\000\022\007\n\003RSA\020\001\022\021\n\rECC_" +
      "SECP256R1\020\002\022\021\n\rECC_SECP384R1\020\003\022\021\n\rECC_SE" +
      "CP521R1\020\004\"\226\001\n\024SignedDrmCertificate\022\027\n\017dr" +
      "m_certificate\030\001 \001(\014\022\021\n\tsignature\030\002 \001(\014\022%" +
      "\n\006signer\030\003 \001(\0132\025.SignedDrmCertificate\022+\n" +
      "\016hash_algorithm\030\004 \001(\0162\023.HashAlgorithmPro" +
      "to\"\242\005\n\020WidevinePsshData\022\017\n\007key_ids\030\002 \003(\014" +
      "\022\022\n\ncontent_id\030\004 \001(\014\022\033\n\023crypto_period_in" +
      "dex\030\007 \001(\r\022\031\n\021protection_scheme\030\t \001(\r\022\035\n\025" +
      "crypto_period_seconds\030\n \001(\r\022,\n\004type\030\013 \001(" +
      "\0162\026.WidevinePsshData.Type:\006SINGLE\022\024\n\014key" +
      "_sequence\030\014 \001(\r\022\021\n\tgroup_ids\030\r \003(\014\0224\n\ren" +
      "titled_keys\030\016 \003(\0132\035.WidevinePsshData.Ent" +
      "itledKey\022\025\n\rvideo_feature\030\017 \001(\t\0222\n\talgor" +
      "ithm\030\001 \001(\0162\033.WidevinePsshData.AlgorithmB" +
      "\002\030\001\022\024\n\010provider\030\003 \001(\tB\002\030\001\022\026\n\ntrack_type\030" +
      "\005 \001(\tB\002\030\001\022\022\n\006policy\030\006 \001(\tB\002\030\001\022\033\n\017grouped" +
      "_license\030\010 \001(\014B\002\030\001\032z\n\013EntitledKey\022\032\n\022ent" +
      "itlement_key_id\030\001 \001(\014\022\016\n\006key_id\030\002 \001(\014\022\013\n" +
      "\003key\030\003 \001(\014\022\n\n\002iv\030\004 \001(\014\022&\n\032entitlement_ke" +
      "y_size_bytes\030\005 \001(\r:\00232\"5\n\004Type\022\n\n\006SINGLE" +
      "\020\000\022\017\n\013ENTITLEMENT\020\001\022\020\n\014ENTITLED_KEY\020\002\"(\n" +
      "\tAlgorithm\022\017\n\013UNENCRYPTED\020\000\022\n\n\006AESCTR\020\001\"" +
      "\265\001\n\nFileHashes\022\016\n\006signer\030\001 \001(\014\022)\n\nsignat" +
      "ures\030\002 \003(\0132\025.FileHashes.Signature\032l\n\tSig" +
      "nature\022\020\n\010filename\030\001 \001(\t\022\024\n\014test_signing" +
      "\030\002 \001(\010\022\022\n\nSHA512Hash\030\003 \001(\014\022\020\n\010main_exe\030\004" +
      " \001(\010\022\021\n\tsignature\030\005 \001(\014*8\n\013LicenseType\022\r" +
      "\n\tSTREAMING\020\001\022\013\n\007OFFLINE\020\002\022\r\n\tAUTOMATIC\020" +
      "\003*\331\001\n\032PlatformVerificationStatus\022\027\n\023PLAT" +
      "FORM_UNVERIFIED\020\000\022\025\n\021PLATFORM_TAMPERED\020\001" +
      "\022\036\n\032PLATFORM_SOFTWARE_VERIFIED\020\002\022\036\n\032PLAT" +
      "FORM_HARDWARE_VERIFIED\020\003\022\034\n\030PLATFORM_NO_" +
      "VERIFICATION\020\004\022-\n)PLATFORM_SECURE_STORAG" +
      "E_SOFTWARE_VERIFIED\020\005*D\n\017ProtocolVersion" +
      "\022\017\n\013VERSION_2_0\020\024\022\017\n\013VERSION_2_1\020\025\022\017\n\013VE" +
      "RSION_2_2\020\026*\206\001\n\022HashAlgorithmProto\022\036\n\032HA" +
      "SH_ALGORITHM_UNSPECIFIED\020\000\022\030\n\024HASH_ALGOR" +
      "ITHM_SHA_1\020\001\022\032\n\026HASH_ALGORITHM_SHA_256\020\002" +
      "\022\032\n\026HASH_ALGORITHM_SHA_384\020\003B4\n&de.klass" +
      "enserver7b.widevine4j.protobufB\010WvProto2" +
      "P\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_LicenseIdentification_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_LicenseIdentification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LicenseIdentification_descriptor,
        new java.lang.String[] { "RequestId", "SessionId", "PurchaseId", "Type", "Version", "ProviderSessionToken", });
    internal_static_License_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_License_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_License_descriptor,
        new java.lang.String[] { "Id", "Policy", "Key", "LicenseStartTime", "RemoteAttestationVerified", "ProviderClientToken", "ProtectionScheme", "SrmRequirement", "SrmUpdate", "PlatformVerificationStatus", "GroupIds", });
    internal_static_License_Policy_descriptor =
      internal_static_License_descriptor.getNestedTypes().get(0);
    internal_static_License_Policy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_License_Policy_descriptor,
        new java.lang.String[] { "CanPlay", "CanPersist", "CanRenew", "RentalDurationSeconds", "PlaybackDurationSeconds", "LicenseDurationSeconds", "RenewalRecoveryDurationSeconds", "RenewalServerUrl", "RenewalDelaySeconds", "RenewalRetryIntervalSeconds", "RenewWithUsage", "AlwaysIncludeClientId", "PlayStartGracePeriodSeconds", "SoftEnforcePlaybackDuration", "SoftEnforceRentalDuration", });
    internal_static_License_KeyContainer_descriptor =
      internal_static_License_descriptor.getNestedTypes().get(1);
    internal_static_License_KeyContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_License_KeyContainer_descriptor,
        new java.lang.String[] { "Id", "Iv", "Key", "Type", "Level", "RequiredProtection", "RequestedProtection", "KeyControl", "OperatorSessionKeyPermissions", "VideoResolutionConstraints", "AntiRollbackUsageTable", "TrackLabel", });
    internal_static_License_KeyContainer_KeyControl_descriptor =
      internal_static_License_KeyContainer_descriptor.getNestedTypes().get(0);
    internal_static_License_KeyContainer_KeyControl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_License_KeyContainer_KeyControl_descriptor,
        new java.lang.String[] { "KeyControlBlock", "Iv", });
    internal_static_License_KeyContainer_OutputProtection_descriptor =
      internal_static_License_KeyContainer_descriptor.getNestedTypes().get(1);
    internal_static_License_KeyContainer_OutputProtection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_License_KeyContainer_OutputProtection_descriptor,
        new java.lang.String[] { "Hdcp", "CgmsFlags", "HdcpSrmRule", "DisableAnalogOutput", "DisableDigitalOutput", });
    internal_static_License_KeyContainer_VideoResolutionConstraint_descriptor =
      internal_static_License_KeyContainer_descriptor.getNestedTypes().get(2);
    internal_static_License_KeyContainer_VideoResolutionConstraint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_License_KeyContainer_VideoResolutionConstraint_descriptor,
        new java.lang.String[] { "MinResolutionPixels", "MaxResolutionPixels", "RequiredProtection", });
    internal_static_License_KeyContainer_OperatorSessionKeyPermissions_descriptor =
      internal_static_License_KeyContainer_descriptor.getNestedTypes().get(3);
    internal_static_License_KeyContainer_OperatorSessionKeyPermissions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_License_KeyContainer_OperatorSessionKeyPermissions_descriptor,
        new java.lang.String[] { "AllowEncrypt", "AllowDecrypt", "AllowSign", "AllowSignatureVerify", });
    internal_static_LicenseRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_LicenseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LicenseRequest_descriptor,
        new java.lang.String[] { "ClientId", "ContentId", "Type", "RequestTime", "KeyControlNonceDeprecated", "ProtocolVersion", "KeyControlNonce", "EncryptedClientId", });
    internal_static_LicenseRequest_ContentIdentification_descriptor =
      internal_static_LicenseRequest_descriptor.getNestedTypes().get(0);
    internal_static_LicenseRequest_ContentIdentification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LicenseRequest_ContentIdentification_descriptor,
        new java.lang.String[] { "WidevinePsshData", "WebmKeyId", "ExistingLicense", "InitData", "ContentIdVariant", });
    internal_static_LicenseRequest_ContentIdentification_WidevinePsshData_descriptor =
      internal_static_LicenseRequest_ContentIdentification_descriptor.getNestedTypes().get(0);
    internal_static_LicenseRequest_ContentIdentification_WidevinePsshData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LicenseRequest_ContentIdentification_WidevinePsshData_descriptor,
        new java.lang.String[] { "PsshData", "LicenseType", "RequestId", });
    internal_static_LicenseRequest_ContentIdentification_WebmKeyId_descriptor =
      internal_static_LicenseRequest_ContentIdentification_descriptor.getNestedTypes().get(1);
    internal_static_LicenseRequest_ContentIdentification_WebmKeyId_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LicenseRequest_ContentIdentification_WebmKeyId_descriptor,
        new java.lang.String[] { "Header", "LicenseType", "RequestId", });
    internal_static_LicenseRequest_ContentIdentification_ExistingLicense_descriptor =
      internal_static_LicenseRequest_ContentIdentification_descriptor.getNestedTypes().get(2);
    internal_static_LicenseRequest_ContentIdentification_ExistingLicense_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LicenseRequest_ContentIdentification_ExistingLicense_descriptor,
        new java.lang.String[] { "LicenseId", "SecondsSinceStarted", "SecondsSinceLastPlayed", "SessionUsageTableEntry", });
    internal_static_LicenseRequest_ContentIdentification_InitData_descriptor =
      internal_static_LicenseRequest_ContentIdentification_descriptor.getNestedTypes().get(3);
    internal_static_LicenseRequest_ContentIdentification_InitData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LicenseRequest_ContentIdentification_InitData_descriptor,
        new java.lang.String[] { "InitDataType", "InitData", "LicenseType", "RequestId", });
    internal_static_MetricData_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_MetricData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MetricData_descriptor,
        new java.lang.String[] { "StageName", "MetricData", });
    internal_static_MetricData_TypeValue_descriptor =
      internal_static_MetricData_descriptor.getNestedTypes().get(0);
    internal_static_MetricData_TypeValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MetricData_TypeValue_descriptor,
        new java.lang.String[] { "Type", "Value", });
    internal_static_VersionInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_VersionInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_VersionInfo_descriptor,
        new java.lang.String[] { "LicenseSdkVersion", "LicenseServiceVersion", });
    internal_static_SignedMessage_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_SignedMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SignedMessage_descriptor,
        new java.lang.String[] { "Type", "Msg", "Signature", "SessionKey", "RemoteAttestation", "MetricData", "ServiceVersionInfo", "SessionKeyType", "OemcryptoCoreMessage", });
    internal_static_ClientIdentification_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_ClientIdentification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ClientIdentification_descriptor,
        new java.lang.String[] { "Type", "Token", "ClientInfo", "ProviderClientToken", "LicenseCounter", "ClientCapabilities", "VmpData", "DeviceCredentials", });
    internal_static_ClientIdentification_NameValue_descriptor =
      internal_static_ClientIdentification_descriptor.getNestedTypes().get(0);
    internal_static_ClientIdentification_NameValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ClientIdentification_NameValue_descriptor,
        new java.lang.String[] { "Name", "Value", });
    internal_static_ClientIdentification_ClientCapabilities_descriptor =
      internal_static_ClientIdentification_descriptor.getNestedTypes().get(1);
    internal_static_ClientIdentification_ClientCapabilities_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ClientIdentification_ClientCapabilities_descriptor,
        new java.lang.String[] { "ClientToken", "SessionToken", "VideoResolutionConstraints", "MaxHdcpVersion", "OemCryptoApiVersion", "AntiRollbackUsageTable", "SrmVersion", "CanUpdateSrm", "SupportedCertificateKeyType", "AnalogOutputCapabilities", "CanDisableAnalogOutput", "ResourceRatingTier", });
    internal_static_ClientIdentification_ClientCredentials_descriptor =
      internal_static_ClientIdentification_descriptor.getNestedTypes().get(2);
    internal_static_ClientIdentification_ClientCredentials_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ClientIdentification_ClientCredentials_descriptor,
        new java.lang.String[] { "Type", "Token", });
    internal_static_EncryptedClientIdentification_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_EncryptedClientIdentification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EncryptedClientIdentification_descriptor,
        new java.lang.String[] { "ProviderId", "ServiceCertificateSerialNumber", "EncryptedClientId", "EncryptedClientIdIv", "EncryptedPrivacyKey", });
    internal_static_DrmCertificate_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_DrmCertificate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DrmCertificate_descriptor,
        new java.lang.String[] { "Type", "SerialNumber", "CreationTimeSeconds", "ExpirationTimeSeconds", "PublicKey", "SystemId", "TestDeviceDeprecated", "ProviderId", "ServiceTypes", "Algorithm", "RotId", "EncryptionKey", });
    internal_static_DrmCertificate_EncryptionKey_descriptor =
      internal_static_DrmCertificate_descriptor.getNestedTypes().get(0);
    internal_static_DrmCertificate_EncryptionKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DrmCertificate_EncryptionKey_descriptor,
        new java.lang.String[] { "PublicKey", "Algorithm", });
    internal_static_SignedDrmCertificate_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_SignedDrmCertificate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SignedDrmCertificate_descriptor,
        new java.lang.String[] { "DrmCertificate", "Signature", "Signer", "HashAlgorithm", });
    internal_static_WidevinePsshData_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_WidevinePsshData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_WidevinePsshData_descriptor,
        new java.lang.String[] { "KeyIds", "ContentId", "CryptoPeriodIndex", "ProtectionScheme", "CryptoPeriodSeconds", "Type", "KeySequence", "GroupIds", "EntitledKeys", "VideoFeature", "Algorithm", "Provider", "TrackType", "Policy", "GroupedLicense", });
    internal_static_WidevinePsshData_EntitledKey_descriptor =
      internal_static_WidevinePsshData_descriptor.getNestedTypes().get(0);
    internal_static_WidevinePsshData_EntitledKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_WidevinePsshData_EntitledKey_descriptor,
        new java.lang.String[] { "EntitlementKeyId", "KeyId", "Key", "Iv", "EntitlementKeySizeBytes", });
    internal_static_FileHashes_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_FileHashes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FileHashes_descriptor,
        new java.lang.String[] { "Signer", "Signatures", });
    internal_static_FileHashes_Signature_descriptor =
      internal_static_FileHashes_descriptor.getNestedTypes().get(0);
    internal_static_FileHashes_Signature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FileHashes_Signature_descriptor,
        new java.lang.String[] { "Filename", "TestSigning", "SHA512Hash", "MainExe", "Signature", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
